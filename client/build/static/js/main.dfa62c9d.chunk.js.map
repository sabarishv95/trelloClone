{"version":3,"sources":["App.context.js","Common.js","Boards/Boards.js","Board/Lists/Cards/Comments/Comments.js","Board/Lists/Cards/Cards.js","Board/Lists/Lists.js","Board/Board.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","currentBoard","manageBoard","board","createCard","dropList","Common","url","Promise","resolve","reject","axios","get","header","content-type","then","response","catch","error","body","post","delete","put","e","persist","this","setState","Object","defineProperty","target","name","value","Boards","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","boards","boardName","goToBoard","bind","assertThisInitialized","common","_this2","data","id","_this3","concat","context","history","push","_this4","prevState","toConsumableArray","_id","_this5","react_default","a","createElement","className","length","map","key","onClick","data-toggle","data-target","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","placeholder","onChange","handleChange","autoComplete","createBoard","Component","contextType","AppContext","Comments","commentBody","editComment","comment","saveComment","deleteComment","card","cardId","boardId","_this$props","index","react_textarea_autosize_esm_browser","createComment","disabled","Fragment","classnames","m-0 p-2 edit-comment","focus","updateComment","cancelSave","Cards","deleteCard","saveDescription","moveCard","toList","cardDescription","setTimeout","cardTitle","title","description","listId","isDragging","dropped","opacity","connectDragSource","style","onFocus","onBlur","updateCard","fontSize","fontWeight","paddingLeft","card-description","comments","Comments_Comments_Comments","defaultValue","lists","list","DragSource","beginDrag","endDrag","monitor","component","didDrop","handleDrop","getDropResult","connect","dragSource","connectDragPreview","dragPreview","Lists","createList","editList","moveAllCards","listTitle","deleteList","preventDefault","_this6","_this7","listLength","connectDropTarget","hovered","source","cards","Lists_Cards_Cards","autoFocus","stopPropagation","DropTarget","drop","_ref","canDrop","_ref2","getItem","dropTarget","isOver","Board","match","params","Board_Lists_Lists","App","react_router_dom","App_context","Provider","react_router","exact","path","DragDropContext","HTML5Backend","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfa62c9d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default React.createContext({\r\n    currentBoard: null,\r\n    manageBoard:(board) => {},\r\n    createCard: null,\r\n    dropList: null\r\n});","import axios from 'axios';\r\n\r\nclass Common {\r\n\r\n    get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(url, {\r\n                    header: {\r\n                        \"content-type\": \"application/json\"\r\n                    }\r\n                }).then((response) => {\r\n                    resolve(response)\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                })\r\n        })\r\n    }\r\n\r\n    post(url, body) {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .post(url, body, {\r\n                    header: {\r\n                        \"content-type\": \"application/json\"\r\n                    }\r\n                }).then((response) => {\r\n                    resolve(response)\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                })\r\n        })\r\n    }\r\n\r\n    delete(url) {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .delete(url, {\r\n                    header: {\r\n                        \"content-type\": \"application/json\"\r\n                    }\r\n                }).then((response) => {\r\n                    resolve(response)\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                })\r\n        })\r\n    }\r\n\r\n    put(url, body) {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .put(url, body, {\r\n                    header: {\r\n                        \"content-type\": \"application/json\"\r\n                    }\r\n                }).then((response) => {\r\n                    resolve(response)\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                })\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.persist();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n}\r\n\r\nexport default Common;","import React, { Component } from \"react\";\r\nimport \"./Boards.scss\";\r\nimport AppContext from \"../App.context\";\r\nimport Common from \"../Common\";\r\n\r\nexport default class Boards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boards: [],\r\n      boardName: \"\"\r\n    };\r\n    this.goToBoard = this.goToBoard.bind(this);\r\n    this.common = new Common();\r\n  }\r\n  static contextType = AppContext;\r\n\r\n  componentDidMount() {\r\n    this.common.get(\"/board/findAllBoards\").then(response => {\r\n      this.setState({ boards: response.data });\r\n    });\r\n  }\r\n\r\n  goToBoard(id) {\r\n    this.common.get(`/board/findBoard/${id}`).then(response => {\r\n      this.context.manageBoard(response.data);\r\n      this.props.history.push(`/board/${id}`);\r\n    });\r\n  }\r\n\r\n  createBoard() {\r\n    this.common\r\n      .post(`/board/createBoard`, { name: this.state.boardName })\r\n      .then(response => {\r\n        this.setState(prevState => {\r\n          return {\r\n            boards: [...prevState.boards, response.data]\r\n          };\r\n        });\r\n        this.context.manageBoard(response.data);\r\n        this.props.history.push(`/board/${response.data._id}`);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid boards-wrapper\">\r\n        <h5 className=\"text-center pt-5\">Personal Boards</h5>\r\n        <div className=\"boards-list container mt-5\">\r\n          <div className=\"row board-container\">\r\n            {this.state.boards.length > 0 &&\r\n              this.state.boards.map(board => (\r\n                <div\r\n                  key={board._id}\r\n                  className=\"board-item nav-link p-0 col-md-2 mr-3 mb-3\"\r\n                  onClick={e => this.goToBoard(board._id)}\r\n                >\r\n                  <p className=\"m-0\">{board.name}</p>\r\n                </div>\r\n              ))}\r\n            <div\r\n              className=\"board-item col-md-2 mr-3\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#createBoard\"\r\n            >\r\n              <p className=\"m-0\">create new board...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"createBoard\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"ModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"ModalLabel\">\r\n                  Create Board\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form className=\"create-board-form\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"boardName\"\r\n                    name=\"boardName\"\r\n                    className=\"board-name\"\r\n                    placeholder=\"Enter board name\"\r\n                    value={this.state.boardName}\r\n                    onChange={this.common.handleChange.bind(this)}\r\n                    autoComplete='off'\r\n                  />\r\n                </form>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.createBoard.bind(this)}\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Create board\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Comments.scss\";\r\nimport AppContext from \"../../../../App.context\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Common from \"../../../../Common\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commentBody: \"\",\r\n      editComment: this.props.comment.body,\r\n      saveComment: false,\r\n      deleteComment: false\r\n    };\r\n    this.common = new Common();\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  createComment() {\r\n    this.setState({ commentBody: \"\" });\r\n    this.common\r\n      .post(`/comment/createComment`, {\r\n        body: this.state.commentBody,\r\n        card: this.props.cardId\r\n      })\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  updateComment() {\r\n    this.common\r\n      .put(`/comment/updateComment/${this.props.comment._id}`, {\r\n        body: this.state.editComment\r\n      })\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n            this.setState({ saveComment: false });\r\n          });\r\n      });\r\n  }\r\n\r\n  deleteComment() {\r\n    this.common\r\n      .delete(\r\n        `/comment/deleteComment/${this.props.comment._id}/${this.props.cardId}`\r\n      )\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { comment, index } = this.props;\r\n    return (\r\n      <div className=\"comments-wrapper pb-2\">\r\n        {(index === 0 || comment.length === 0) && (\r\n          <div className=\"col-md-12 px-0 py-1 add-comment\">\r\n            {\r\n              <div className=\"comment-form\">\r\n                <h5 className=\"my-3 mx-0 font-weight-bold\">Add Comment</h5>\r\n                <Textarea\r\n                  id=\"commentBody\"\r\n                  name=\"commentBody\"                  \r\n                  className=\"comment-title\"\r\n                  placeholder=\"Enter comment body ...\"\r\n                  value={this.state.commentBody}\r\n                  onChange={this.common.handleChange.bind(this)}\r\n                />\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-success mt-2\"\r\n                    onClick={this.createComment.bind(this)}\r\n                    disabled={this.state.commentBody === \"\" ? true : false}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        )}\r\n        {comment.length !== 0 && (\r\n          <React.Fragment>\r\n            {comment.length !== 0 && index === 0 && (\r\n              <h5 className=\"activity my-3 mx-0 font-weight-bold\">Activity</h5>\r\n            )}\r\n            <div className=\"comment my-2 py-2 px-0\">\r\n              {!this.state.saveComment && (\r\n                <span className=\"m-0 p-2\">{comment.body}</span>\r\n              )}\r\n              {this.state.saveComment && (\r\n                <Textarea\r\n                  className={classnames({\r\n                    \"m-0 p-2 edit-comment\": true,\r\n                    focus: this.state.saveComment\r\n                  })}\r\n                  id=\"editComment\"\r\n                  name=\"editComment\"\r\n                  value={this.state.editComment}\r\n                  onChange={this.common.handleChange.bind(this)}\r\n                />\r\n              )}\r\n            </div>\r\n            {this.state.saveComment && (\r\n              <div className=\"comments-btn-wrapper my-2\">\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this.updateComment.bind(this)}\r\n                  disabled={this.state.editComment === \"\" ? true : false}\r\n                >\r\n                  Save\r\n                </button>\r\n                <i\r\n                  className=\"fas fa-times ml-3\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      saveComment: false,\r\n                      cancelSave: true,\r\n                      editComment: comment.body\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"comment-actions\">\r\n              <span\r\n                className=\"mr-1\"\r\n                onClick={() => this.setState({ saveComment: true })}\r\n              >\r\n                Edit\r\n              </span>\r\n              <span className=\"mr-1\">-</span>\r\n              <span\r\n                className=\"mr-1\"\r\n                onClick={() => this.setState({ deleteComment: true })}\r\n              >\r\n                Delete\r\n              </span>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        {this.state.deleteComment && (\r\n          <div className=\"delete-comment-confirmation row\">\r\n            <div className=\"col-12 delete-header mb-3 p-2\">\r\n              <p className=\"m-0 font-weight-light\">Delete Comment?</p>\r\n              <i\r\n                className=\"fas fa-times\"\r\n                onClick={() =>\r\n                  this.setState(prevState => {\r\n                    return { deleteComment: !prevState.deleteComment };\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 mb-3\">\r\n              <p className=\"m-0 delete-content\">\r\n                Deleting a comment is forever. There is no undo.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-12 pb-2\">\r\n              <button\r\n                className=\"btn btn-danger w-100\"\r\n                onClick={this.deleteComment.bind(this)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Cards.scss\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport AppContext from \"../../../App.context\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Common from \"../../../Common\";\r\nimport classnames from \"classnames\";\r\nimport { DragSource } from \"react-dnd\";\r\n\r\nconst itemSource = {\r\n  beginDrag(props) {\r\n    return props.card;\r\n  },\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      return;\r\n    }\r\n\r\n    return props.handleDrop(props.card, monitor.getDropResult().list._id);\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n    dropped: monitor.didDrop()\r\n  };\r\n}\r\n\r\nclass Cards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteCard: false,\r\n      saveDescription: false,\r\n      cancelSave: false,\r\n      moveCard: false,\r\n      toList: null,\r\n      cardDescription: \"\"\r\n    };\r\n\r\n    this.common = new Common();\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  updateCard() {\r\n    setTimeout(() => {\r\n      if (this.state.cardTitle && !this.state.cancelSave) {\r\n        this.common\r\n          .put(`/card/updateCard/${this.props.card._id}`, {\r\n            title: this.state.cardTitle,\r\n            description: this.state.cardDescription\r\n          })\r\n          .then(response => {\r\n            this.common\r\n              .get(`/board/findBoard/${this.props.boardId}`)\r\n              .then(response => {\r\n                this.context.manageBoard(response.data);\r\n                this.setState({ saveDescription: false });\r\n              });\r\n          });\r\n      } else if (!this.state.cardTitle || this.state.cancelSave) {\r\n        this.setState({\r\n          cardTitle: this.props.card.title,\r\n          cardDescription: this.props.card.description\r\n            ? this.props.card.description\r\n            : \"\"\r\n        });\r\n      }\r\n    }, 250);\r\n  }\r\n\r\n  deleteCard() {\r\n    this.common\r\n      .delete(`/card/deleteCard/${this.props.card._id}/${this.props.listId}`)\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  moveCard() {\r\n    this.setState({ moveCard: false });\r\n    this.common\r\n      .put(\r\n        `/card/moveCard/${this.props.card._id}/${this.props.listId}/${\r\n          this.state.toList\r\n        }`\r\n      )\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      card,\r\n      boardId,\r\n      listId,\r\n      isDragging,\r\n      dropped,\r\n      connectDragSource\r\n    } = this.props;\r\n    const opacity = isDragging || dropped ? 0 : 1;\r\n    return connectDragSource(\r\n      <div style={{ opacity }}>\r\n        {card.length !== 0 && (\r\n          <div className=\"card-wrapper row mt-2 mb-0 mx-0\">\r\n            <div\r\n              className=\"col-md-12 p-2 card\"\r\n              data-toggle=\"modal\"\r\n              data-target={`#card${card._id}`}\r\n              onClick={() => {\r\n                this.setState({\r\n                  cardTitle: card.title,\r\n                  cardDescription: card.description,\r\n                  deleteCard: false\r\n                });\r\n                this.context.manageBoard(null);\r\n              }}\r\n            >\r\n              <p className=\"m-0\">{card.title}</p>\r\n            </div>\r\n            <div\r\n              id={`card${card._id}`}\r\n              className=\"modal fade mt-2 py-0 comments\"\r\n            >\r\n              <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header row m-0\">\r\n                    <div className=\"col-12\">\r\n                      <Textarea\r\n                        id=\"cardTitle\"\r\n                        name=\"cardTitle\"\r\n                        className=\"card-title m-0\"\r\n                        value={this.state.cardTitle}\r\n                        onChange={this.common.handleChange.bind(this)}\r\n                        onFocus={() => this.setState({ cancelSave: false })}\r\n                        onBlur={this.updateCard.bind(this)}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        aria-label=\"Close\"\r\n                      >\r\n                        <i className=\"fas fa-times\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"modal-body row m-0\">\r\n                    <div className=\"col-12 col-sm-12 col-md-10 card-section\">\r\n                      <h5 className=\"my-3 mx-0 font-weight-bold\">\r\n                        Description\r\n                        {card.description && (\r\n                          <small\r\n                            style={{\r\n                              fontSize: \"14px\",\r\n                              fontWeight: \"500\",\r\n                              paddingLeft: \"10px\"\r\n                            }}\r\n                          >\r\n                            (Click on the description to edit)\r\n                          </small>\r\n                        )}\r\n                      </h5>\r\n                      {!this.state.saveDescription && (\r\n                        <p\r\n                          className=\"m-0 description\"\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              saveDescription: true,\r\n                              cancelSave: false\r\n                            })\r\n                          }\r\n                        >\r\n                          {card.description}\r\n                        </p>\r\n                      )}\r\n                      {(this.state.saveDescription ||\r\n                        !this.props.card.description) && (\r\n                        <Textarea\r\n                          id=\"cardDescription\"\r\n                          name=\"cardDescription\"\r\n                          className={classnames({\r\n                            \"card-description\": true,\r\n                            focus: this.state.saveDescription\r\n                          })}\r\n                          placeholder=\"Add a more detailed description ...\"\r\n                          value={this.state.cardDescription}\r\n                          onChange={this.common.handleChange.bind(this)}\r\n                          onFocus={() =>\r\n                            this.setState({ saveDescription: true })\r\n                          }\r\n                          onBlur={this.updateCard.bind(this)}\r\n                        />\r\n                      )}\r\n                      {this.state.saveDescription && (\r\n                        <div className=\"description-btn-wrapper mt-2\">\r\n                          <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={this.updateCard.bind(this)}\r\n                            disabled={\r\n                              !this.state.cardDescription ? true : false\r\n                            }\r\n                          >\r\n                            Save\r\n                          </button>\r\n                          <i\r\n                            className=\"fas fa-times ml-3\"\r\n                            onClick={() =>\r\n                              this.setState({\r\n                                cancelSave: true,\r\n                                saveDescription: false\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      {card.comments.length !== 0 &&\r\n                        card.comments.map((comment, index) => (\r\n                          <Comments\r\n                            key={comment._id}\r\n                            comment={comment}\r\n                            index={index}\r\n                            boardId={boardId}\r\n                            cardId={card._id}\r\n                          />\r\n                        ))}\r\n                      {card.comments.length === 0 && (\r\n                        <Comments\r\n                          key={card._id}\r\n                          comment={card.comments}\r\n                          index={-1}\r\n                          boardId={boardId}\r\n                          cardId={card._id}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-md-2 actions-section\">\r\n                      <h5 className=\"font-weight-bold my-3\">Actions</h5>\r\n                      <div className=\"actions-btn-wrapper\">\r\n                        <button\r\n                          className=\"move-btn btn mb-3\"\r\n                          onClick={() =>\r\n                            this.setState(prevState => {\r\n                              return {\r\n                                moveCard: !prevState.moveCard,\r\n                                deleteCard: false\r\n                              };\r\n                            })\r\n                          }\r\n                        >\r\n                          Move\r\n                        </button>\r\n                        <button\r\n                          className=\"delete-btn btn btn-danger\"\r\n                          onClick={() =>\r\n                            this.setState(prevState => {\r\n                              return {\r\n                                deleteCard: !prevState.deleteCard,\r\n                                moveCard: false\r\n                              };\r\n                            })\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                      {this.state.moveCard && (\r\n                        <div className=\"move-content\">\r\n                          <div className=\"col-12 delete-header mb-3 p-2\">\r\n                            <p className=\"m-0 font-weight-light text-center\">\r\n                              Move Card\r\n                            </p>\r\n                            <i\r\n                              className=\"fas fa-times\"\r\n                              onClick={() =>\r\n                                this.setState(prevState => {\r\n                                  return { moveCard: !prevState.moveCard };\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <select\r\n                              id=\"toList\"\r\n                              name=\"toList\"\r\n                              onChange={this.common.handleChange.bind(this)}\r\n                            >\r\n                              <option defaultValue=\"Choose a list\">\r\n                                Choose a list\r\n                              </option>\r\n                              {this.context.currentBoard.lists.map(list => (\r\n                                <option key={list._id} value={list._id}>\r\n                                  {list.title}\r\n                                  {list._id !== listId ? null : \" (current)\"}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"col-12 pb-2\">\r\n                            <button\r\n                              className=\"btn btn-success w-100\"\r\n                              data-dismiss=\"modal\"\r\n                              onClick={this.moveCard.bind(this)}\r\n                            >\r\n                              Move\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {this.state.deleteCard && (\r\n                        <div className=\"delete-confirmation row\">\r\n                          <div className=\"col-12 delete-header mb-3 p-2\">\r\n                            <p className=\"m-0 font-weight-light\">\r\n                              Delete Card?\r\n                            </p>\r\n                            <i\r\n                              className=\"fas fa-times\"\r\n                              onClick={() =>\r\n                                this.setState(prevState => {\r\n                                  return { deleteCard: !prevState.deleteCard };\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 mb-3\">\r\n                            <p className=\"m-0 delete-content\">\r\n                              All actions will be removed from the activity feed\r\n                              and you won’t be able to re-open the card. There\r\n                              is no undo.\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"col-12 pb-2\">\r\n                            <button\r\n                              className=\"btn btn-danger w-100\"\r\n                              data-dismiss=\"modal\"\r\n                              onClick={this.deleteCard.bind(this)}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragSource(\"cards\", itemSource, collect)(Cards);\r\n","import React, { Component } from \"react\";\r\nimport \"./Lists.scss\";\r\nimport Cards from \"./Cards/Cards\";\r\nimport AppContext from \"../../App.context\";\r\nimport Common from \"../../Common\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    hovered: monitor.isOver(),\r\n    source: monitor.getItem()\r\n  };\r\n}\r\n\r\nclass Lists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createList: false,\r\n      editList: false,\r\n      moveAllCards: false,\r\n      listTitle: \"\",\r\n      cardTitle: \"\"\r\n    };\r\n    this.deleteList = this.deleteList.bind(this);\r\n    this.moveAllCards = this.moveAllCards.bind(this);\r\n    this.moveCard = this.moveCard.bind(this);\r\n    this.common = new Common();\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  createList(e) {\r\n    e.persist();\r\n    e.preventDefault();\r\n    this.common\r\n      .post(`/list/createList`, {\r\n        title: this.state.listTitle,\r\n        board: this.props.boardId\r\n      })\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  deleteList(id) {\r\n    this.common\r\n      .delete(`/list/deleteList/${id}/${this.props.boardId}`)\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  moveAllCards(id) {\r\n    this.common\r\n      .put(`/card/moveAllCards/${this.props.list._id}/${id}`)\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n            this.setState({ moveAllCards: false, editList: false });\r\n          });\r\n      });\r\n  }\r\n\r\n  moveCard(card, listId) {\r\n    // drop()\r\n    this.common\r\n      .put(`/card/moveCard/${card._id}/${card.list}/${listId}`)\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n          });\r\n      });\r\n  }\r\n\r\n  createCard(e) {\r\n    e.persist();\r\n    e.preventDefault();\r\n    this.common\r\n      .post(`/card/createCard/`, {\r\n        title: this.state.cardTitle,\r\n        list: this.props.list._id\r\n      })\r\n      .then(response => {\r\n        this.common\r\n          .get(`/board/findBoard/${this.props.boardId}`)\r\n          .then(response => {\r\n            this.context.manageBoard(response.data);\r\n            this.setState({ cardTitle: \"\" });\r\n          });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      index,\r\n      listLength,\r\n      boardId,\r\n      connectDropTarget,\r\n      hovered,\r\n      source\r\n    } = this.props;\r\n    return connectDropTarget(\r\n      <div>\r\n        {list.length !== 0 && (\r\n          <div className=\"d-inline-block list mr-3 p-2\">\r\n            <div className=\"list-title-wrapper\">\r\n              <p className=\"m-0 ml-3 m-0 list-title\">{list.title}</p>\r\n              <i\r\n                className=\"fa fa-ellipsis-h\"\r\n                onClick={() => {\r\n                  this.setState(prevState => {\r\n                    return {\r\n                      editList: !prevState.editList,\r\n                      moveAllCards: false\r\n                    };\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            {this.state.editList && (\r\n              <div className=\"list-actions-wrapper\">\r\n                <div className=\"list-actions-header\">\r\n                  {!this.state.moveAllCards && (\r\n                    <p className=\"font-weight-bold ml-2 mr-0 my-0 py-2 list-actions-heading\">\r\n                      List Actions\r\n                    </p>\r\n                  )}\r\n                  {this.state.moveAllCards && (\r\n                    <React.Fragment>\r\n                      <i\r\n                        className=\"fas fa-arrow-left ml-2\"\r\n                        onClick={() =>\r\n                          this.setState(prevState => {\r\n                            return { moveAllCards: !prevState.moveAllCards };\r\n                          })\r\n                        }\r\n                      />\r\n                      <p className=\"font-weight-bold ml-2 mr-0 my-0 py-2 list-actions-heading\">\r\n                        Move all cards\r\n                      </p>\r\n                    </React.Fragment>\r\n                  )}\r\n                  <i\r\n                    className=\"mr-2 fas fa-times\"\r\n                    onClick={() =>\r\n                      this.setState(prevState => {\r\n                        return {\r\n                          editList: !prevState.editList,\r\n                          moveAllCards: !prevState.moveAllCards\r\n                        };\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                {!this.state.moveAllCards && (\r\n                  <div className=\"list-actions\">\r\n                    <p\r\n                      className=\"ml-2 mb-1 mt-1 font-weight-normal\"\r\n                      onClick={() => {\r\n                        this.context.manageBoard(list._id);\r\n                        this.setState(prevState => {\r\n                          return { editList: !prevState.editList };\r\n                        });\r\n                      }}\r\n                    >\r\n                      Add Card ...\r\n                    </p>\r\n                    {list.cards.length !== 0 && (\r\n                      <p\r\n                        className=\"ml-2 mb-1 mt-1 font-weight-normal\"\r\n                        onClick={() => {\r\n                          this.setState(prevState => {\r\n                            return { moveAllCards: !prevState.moveAllCards };\r\n                          });\r\n                        }}\r\n                      >\r\n                        Move all cards in this list\r\n                      </p>\r\n                    )}\r\n                    <p\r\n                      className=\"ml-2 mb-1 font-weight-normal\"\r\n                      onClick={() => this.deleteList(list._id)}\r\n                    >\r\n                      Delete list ...\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {this.state.moveAllCards && (\r\n                  <div className=\"all-lists\">\r\n                    {this.context.currentBoard.lists.map(list => {\r\n                      return (\r\n                        <React.Fragment key={list._id}>\r\n                          {list._id === this.props.list._id && (\r\n                            <button\r\n                              className=\"p-2 current-list\"\r\n                              disabled={true}\r\n                              value={`${list._id} (current)`}\r\n                            >\r\n                              {list.title}\r\n                            </button>\r\n                          )}\r\n                          {list._id !== this.props.list._id && (\r\n                            <button\r\n                              className=\"p-2\"\r\n                              onClick={() => this.moveAllCards(list._id)}\r\n                            >\r\n                              {list.title}\r\n                            </button>\r\n                          )}\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            {list.cards.length !== 0 &&\r\n              list.cards.map((card, index) => (\r\n                <Cards\r\n                  key={card._id}\r\n                  card={card}\r\n                  boardId={boardId}\r\n                  listId={list._id}\r\n                  handleDrop={(card, listId) => this.moveCard(card, listId)}\r\n                />\r\n              ))}\r\n            {list.cards.length === 0 && (\r\n              <Cards\r\n                key={list._id}\r\n                card={list.cards}\r\n                boardId={boardId}\r\n                listId={list._id}\r\n                handleDrop={(card, listId) => this.moveCard(card, listId)}\r\n              />\r\n            )}\r\n            {hovered && source.list !== list._id && (\r\n              <div className=\"hovered col-md-12 px-0 py-1 mt-2\" />\r\n            )}\r\n            <div className=\"col-md-12 px-0 py-1 add-card\">\r\n              {this.context.createCard !== list._id && (\r\n                <p\r\n                  className=\"m-0\"\r\n                  onClick={() => {\r\n                    this.context.manageBoard(list._id);\r\n                    this.setState({ cardTitle: \"\", editList: false });\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                  <span>Add another card</span>\r\n                </p>\r\n              )}\r\n              {this.context.createCard === list._id && (\r\n                <form className=\"mt-3 card-form\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"cardTitle\"\r\n                    name=\"cardTitle\"\r\n                    className=\"card-title d-block\"\r\n                    placeholder=\"Enter card title\"\r\n                    value={this.state.cardTitle}\r\n                    onChange={this.common.handleChange.bind(this)}\r\n                    autoFocus={true}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <div>\r\n                    <button\r\n                      className=\"btn btn-success mt-2\"\r\n                      onClick={this.createCard.bind(this)}\r\n                      disabled={this.state.cardTitle === \"\" ? true : false}\r\n                    >\r\n                      Add card\r\n                    </button>\r\n                    <i\r\n                      className=\"mt-2 fas fa-times\"\r\n                      onClick={() => this.context.manageBoard(null)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {(index === listLength - 1) && (\r\n          <div\r\n            className=\"d-inline-block add-list p-2\"\r\n            onClick={() =>\r\n              this.setState(prevState => {\r\n                return { createList: !prevState.createList, listTitle: \"\" };\r\n              })\r\n            }\r\n          >\r\n            {!this.state.createList && listLength !== 0 && (\r\n              <p className=\"m-0\">\r\n                <span> + </span>Add a list\r\n              </p>\r\n            )}\r\n            {(this.state.createList || listLength === 0) && (\r\n              <form className=\"mt-3 list-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"listTitle\"\r\n                  name=\"listTitle\"\r\n                  className=\"list-title\"\r\n                  placeholder=\"Enter list title\"\r\n                  value={this.state.listTitle}\r\n                  onChange={this.common.handleChange.bind(this)}\r\n                  onClick={e => e.stopPropagation()}\r\n                  autoFocus={true}\r\n                  autoComplete=\"off\"\r\n                />\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-success mt-2\"\r\n                    onClick={this.createList.bind(this)}\r\n                    disabled={this.state.listTitle === \"\" ? true : false}\r\n                  >\r\n                    Add list\r\n                  </button>\r\n                  <i\r\n                    className=\"mt-2 fas fa-times\"\r\n                    onClick={e => {\r\n                      e.persist();\r\n                      e.stopPropagation();\r\n                      this.setState(prevState => {\r\n                        return { createList: !prevState.createList };\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropTarget(\r\n  \"cards\",\r\n  {\r\n    drop({ list }) {\r\n      return { list };\r\n    },\r\n    canDrop({ list }, monitor) {\r\n      return monitor.getItem().list !== list._id;\r\n    }\r\n  },\r\n  collect\r\n)(Lists);\r\n","import React, { Component } from \"react\";\r\nimport Lists from \"./Lists/Lists\";\r\nimport \"./Board.scss\";\r\nimport AppContext from \"../App.context\";\r\nimport Common from '../Common'\r\n\r\nexport default class Board extends Component {\r\n  static contextType = AppContext;\r\n  common = new Common();\r\n\r\n  componentDidMount() {\r\n    if (!this.context.currentBoard) {\r\n      this.common.get(`/board/findBoard/${this.props.match.params.id}`).then(response => {\r\n        this.context.manageBoard(response.data);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid board-wrapper p-4\">\r\n        {this.context.currentBoard !== null && (\r\n          <React.Fragment>\r\n            <h5 className=\"board-name\">{this.context.currentBoard.name}</h5>\r\n            <div className=\"board mt-3\">\r\n              {this.context.currentBoard.lists.length !== 0 &&\r\n                this.context.currentBoard.lists.map((list, index) => (\r\n                  <div className=\"list-wrapper\" key={list._id}>\r\n                    <Lists\r\n                      list={list}\r\n                      index={index}\r\n                      listLength={this.context.currentBoard.lists.length}\r\n                      boardId={this.props.match.params.id}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              {this.context.currentBoard.lists.length === 0 && (\r\n                <div\r\n                  className=\"list-wrapper\"\r\n                  key={this.context.currentBoard._id}\r\n                >\r\n                  <Lists\r\n                    list={this.context.currentBoard.lists}\r\n                    index={-1}\r\n                    listLength={this.context.currentBoard.lists.length}\r\n                    boardId={this.props.match.params.id}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Boards from \"./Boards/Boards\";\r\nimport Board from \"./Board/Board\";\r\nimport \"./App.scss\";\r\nimport AppContext from \"./App.context\";\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DragDropContext } from \"react-dnd\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    currentBoard: null,\r\n    createCard: null,\r\n    dropList: null\r\n  };\r\n  static contextType = AppContext;\r\n\r\n  manageBoard(data) {\r\n    if (typeof data === \"object\" && data) {\r\n      this.setState({\r\n        currentBoard: data,\r\n        createCard: null\r\n      });\r\n    } else {\r\n      this.setState({ createCard: data });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <AppContext.Provider\r\n            value={{\r\n              currentBoard: this.state.currentBoard,\r\n              manageBoard: this.manageBoard.bind(this),\r\n              createCard: this.state.createCard,\r\n              dropList: this.state.dropList\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Boards} />\r\n              <Route exact path=\"/board/:id\" component={Board} />\r\n            </Switch>\r\n          </AppContext.Provider>\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropContext(HTML5Backend)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}